---

# add signing keys
- name: "add repo keys"
  apt_key:
    keyserver: "{{ item.keyserver | default(omit) }}"
    id: "{{ item.id | default(omit) }}"
    url: "{{ item.url | default(omit) }}"
  with_items: "{{ desktop_ubuntu_apt_keys }}"
  become: true

# add repos
- name: "setting up repos"
  apt_repository:
    repo: "{{ item.repo }}"
    update_cache: true
    filename: "{{ item.filename | default(omit) }}"
  with_items: "{{ desktop_ubuntu_apt_repos }}"
  become: true

# install packages
- name: "install packages"
  apt:
    name: "{{ item }}"
    state: "latest"
  with_items: "{{ desktop_ubuntu_apt_packages }}"
  become: true

# install packages from pip
- name: "install pip packages"
  pip:
    name: "{{ item }}"
    state: "latest"
  with_items: "{{ desktop_pip_packages }}"
  become: true

- name: "create required directories"
  file:
    path: "{{ item.dest }}"
    state: "directory"
  with_items: "{{ desktop_install_archives }}"
  become: true

# install from archive
- name: "install from archive"
  unarchive:
    src: "{{ item.src | default(omit) }}"
    dest: "{{ item.dest | default(omit) }}"
    remote_src: "{{ item.remote_src | default(omit) }}"
    creates: "{{ item.creates | default(omit) }}"
    exclude: "{{ item.exclude | default(omit) }}"
    extra_opts: "{{ item.extra_opts | default(omit) }}"
    mode: "{{ item.mode | default(omit) }}"
    owner: "{{ item.owner | default(omit) }}"
    group: "{{ item.group | default(desktop_user | default(omit)) }}"
  with_items: "{{ desktop_install_archives }}"
  become: true

# install binaries
- name: "install bins from url"
  get_url:
    url: "{{ item.url | default(omit) }}"
    dest: "{{ item.dest | default(omit) }}"
    mode: "{{ item.mode | default(omit) }}"
    owner: "{{ item.owner | default(omit) }}"
    group: "{{ item.group | default(desktop_user | default(omit)) }}"
  with_items: "{{ desktop_install_bins }}"
  become: true

# push files
- name: "create required directories"
  file:
    path: "{{ item.dest | dirname }}"
    state: "directory"
  with_items: "{{ desktop_push_files }}"
  become: true

- name: "push various files"
  copy:
    dest: "{{ item.dest }}"
    src: "{{ item.src | default(omit) }}"
    content: "{{ item.content | default(omit) }}"
    mode: "{{ item.mode | default(omit) }}"
    owner: "{{ item.owner | default(omit) }}"
    group: "{{ item.group | default(desktop_user | default(omit)) }}"
  with_items: "{{ desktop_push_files }}"
  become: true

# create docker config directoy
- name: "create docker config directory"
  file:
    path: "/etc/docker"
    state: "directory"
    mode: 0600
    owner: "root"
    group: "root"
  become: true

# configure docker deamon json file
- name: "configure docker daemon.json"
  template:
    src: "daemon.json.j2"
    dest: "/etc/docker/daemon.json"
    mode: 0400
    owner: "root"
    group: "docker"
  notify: "restart docker"
  become: true

# add user to docker group
- name: "add user {{ desktop_user }} to docker group"
  user:
    name: "{{ desktop_user }}"
    groups: docker
    append: yes
  become: true

# enable services
- name: "enable various services"
  service:
    name: "{{ item }}"
    state: "started"
    enabled: true
  with_items: "{{ desktop_services_enabled }}"
  become: true

# remove packages
- name: "remove packages"
  apt:
    name: "{{ item }}"
    state: "absent"
  with_items: "{{ desktop_ubuntu_remove_packages }}"
  become: true

# disable services
- name: "disable various services"
  service:
    name: "{{ item }}"
    state: "stopped"
    enabled: false
  with_items: "{{ desktop_services_disable }}"
  become: true

# tilix related
- name: tilix - symlink vte
  file:
    src: /etc/profile.d/vte-2.91.sh
    dest: /etc/profile.d/vte.sh
    state: link
  become: true

- name: tilix - source vte in bashrc
  blockinfile:
    path: "/home/{{ desktop_user }}/.bashrc"
    block: |
      # VTE Configuration\n
      if [ $TILIX_ID ] || [ $VTE_VERSION ]; then
          source /etc/profile.d/vte.sh
      fi

# gnome extensions
- name: Install gnome extensions
  gnome_shell_extension:
    id: "{{ item }}"
    gnome_extension_path: /usr/share/gnome-shell/extensions/
  become: yes
  with_items: "{{ desktop_gnome_extensions }}"

# atom packages
- name: Install Atom Packages
  apm:
    name: "{{ item }}"
  with_items: "{{ desktop_atom_addons }}"
